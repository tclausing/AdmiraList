name: Merge Upstream PRs

on:
  workflow_dispatch:
  schedule:
    - cron: '3 7 * * *'

jobs:
  merge-upstream-prs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/jkrejcha/AdmiraList.git
          git fetch upstream master

      - name: Get all open PRs from upstream with source repo information
        id: get_prs
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          PRS=$(gh pr list --repo jkrejcha/AdmiraList --state open --json headRepositoryOwner,headRepository,headRefName,createdAt | jq -c '.[] | select(.headRepository != null) | {repo: "\(.headRepositoryOwner.login)/\(.headRepository.name)", branch: .headRefName, createdAt: .createdAt}' | sort -r)
          echo "PRS=${PRS}" | tee -a $GITHUB_ENV

      - name: Merge PR branches into local branch
        run: |
          LOCAL_BRANCH="upstream-prs"
          git checkout -b $LOCAL_BRANCH
          git reset --hard upstream/master

          # Convert JSON array to newline-separated for loop processing
          echo "$PRS" | jq -r '.repo + " " + .branch' | while read -r repo branch; do
            # Add and fetch the remote if it doesn't already exist
            if ! git remote | grep -q "${repo}"; then
              git remote add "${repo}" "https://github.com/${repo}.git"
            fi
            git fetch "${repo}" "${branch}"

            # Merge the PR branch into the local branch
            git merge --no-ff "${repo}/${branch}" && echo "Merged ${repo}/${branch}" || echo "Merge conflict with ${repo}/${branch}, skipping"
          done

          git log upstream/master..HEAD --all
          # git push origin $LOCAL_BRANCH --force